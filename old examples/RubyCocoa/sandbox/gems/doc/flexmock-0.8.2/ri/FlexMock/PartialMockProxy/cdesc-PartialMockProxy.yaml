--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: mock
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: "######################################################################### PartialMockProxy is used to mate the mock framework to an existing object. The object is &quot;enhanced&quot; with a reference to a mock object (stored in <tt>@flexmock_mock</tt>). When the <tt>should_receive</tt> method is sent to the proxy, it overrides the existing object's method by creating singleton method that forwards to the mock. When testing is complete, PartialMockProxy will erase the mocking infrastructure from the object being mocked (e.g. remove instance variables and mock singleton methods)."
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The following methods are added to partial mocks so that they can act like a mock.
  name: MOCK_METHODS
  value: "[       :should_receive, :new_instances,        :flexmock_get,   :flexmock_teardown, :flexmock_verify"
full_name: FlexMock::PartialMockProxy
includes: 
- !ruby/object:RI::IncludedModule 
  name: Ordering
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: add_mock_method
- !ruby/object:RI::MethodSummary 
  name: any_instance
- !ruby/object:RI::MethodSummary 
  name: flexmock_container
- !ruby/object:RI::MethodSummary 
  name: flexmock_container=
- !ruby/object:RI::MethodSummary 
  name: flexmock_expectations_for
- !ruby/object:RI::MethodSummary 
  name: flexmock_get
- !ruby/object:RI::MethodSummary 
  name: flexmock_teardown
- !ruby/object:RI::MethodSummary 
  name: flexmock_verify
- !ruby/object:RI::MethodSummary 
  name: new_instances
- !ruby/object:RI::MethodSummary 
  name: should_receive
name: PartialMockProxy
superclass: Object
