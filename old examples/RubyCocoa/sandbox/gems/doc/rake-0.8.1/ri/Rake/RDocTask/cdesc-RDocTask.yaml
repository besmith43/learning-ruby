--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Run the rdoc process as an external shell (default is false)
  name: external
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Name of file to be used as the main, top level file of the RDoc. (default is none)
  name: main
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Name of the main, top level task. (default is :rdoc)
  name: name
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: List of options to be passed rdoc. (default is [])
  name: options
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Name of directory to receive the html output files. (default is &quot;html&quot;)
  name: rdoc_dir
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: List of files to be included in the rdoc generation. (default is [])
  name: rdoc_files
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Name of template to be used by rdoc. (default is 'html')
  name: template
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Title of RDoc documentation. (default is none)
  name: title
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: Create a documentation task that will generate the RDoc files for a project.
- !ruby/struct:SM::Flow::P 
  body: "The RDocTask will create the following targets:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: <b><em>rdoc</em></b>
    body: Main task for this RDOC task.
  - !ruby/struct:SM::Flow::LI 
    label: <b>:clobber_<em>rdoc</em></b>
    body: Delete all the rdoc files. This target is automatically added to the main clobber target.
  - !ruby/struct:SM::Flow::LI 
    label: <b>:re<em>rdoc</em></b>
    body: Rebuild the rdoc files from scratch, even if they are not out of date.
  type: :LABELED
- !ruby/struct:SM::Flow::P 
  body: "Simple Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Rake::RDocTask.new do |rd|\n    rd.main = &quot;README.rdoc&quot;\n    rd.rdoc_files.include(&quot;README.rdoc&quot;, &quot;lib/**/*.rb&quot;)\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "You may wish to give the task a different name, such as if you are generating two sets of documentation. For instance, if you want to have a development set of documentation including private methods:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Rake::RDocTask.new(:rdoc_dev) do |rd|\n    rd.main = &quot;README.doc&quot;\n    rd.rdoc_files.include(&quot;README.rdoc&quot;, &quot;lib/**/*.rb&quot;)\n    rd.options &lt;&lt; &quot;--all&quot;\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: The tasks would then be named :<em>rdoc_dev</em>, :clobber_<em>rdoc_dev</em>, and :re<em>rdoc_dev</em>.
constants: []

full_name: Rake::RDocTask
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: define
- !ruby/object:RI::MethodSummary 
  name: option_list
- !ruby/object:RI::MethodSummary 
  name: option_string
- !ruby/object:RI::MethodSummary 
  name: quote
name: RDocTask
superclass: TaskLib
