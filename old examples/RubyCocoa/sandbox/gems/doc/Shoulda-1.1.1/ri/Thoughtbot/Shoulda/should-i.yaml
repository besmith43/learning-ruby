--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::H 
  level: 1
  text: Should statements
- !ruby/struct:SM::Flow::P 
  body: Should statements are just syntactic sugar over normal Test::Unit test methods. A should block contains all the normal code and assertions you're used to seeing, with the added benefit that they can be wrapped inside context blocks (see below).
- !ruby/struct:SM::Flow::H 
  level: 2
  text: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: " class UserTest &lt;&lt; Test::Unit::TestCase\n\n   def setup\n     @user = User.new(&quot;John&quot;, &quot;Doe&quot;)\n   end\n\n   should &quot;return its full name&quot;\n     assert_equal 'John Doe', @user.full_name\n   end\n\n end\n"
- !ruby/struct:SM::Flow::P 
  body: "...will produce the following test:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "<tt>&quot;test: User should return its full name. &quot;</tt>"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "Note: The part before <tt>should</tt> in the test name is gleamed from the name of the Test::Unit class."
full_name: Thoughtbot::Shoulda#should
is_singleton: false
name: should
params: (name, &blk)
visibility: public
