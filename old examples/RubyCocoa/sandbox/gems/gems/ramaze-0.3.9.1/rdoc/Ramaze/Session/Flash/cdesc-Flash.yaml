--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: The purpose of this class is to act as a unifier of the previous and current flash.
- !ruby/struct:SM::Flow::P 
  body: Flash means pairs of keys and values that are held only over one request/response cycle. So you can assign a key/value in the current session and retrieve it in the current and following request.
- !ruby/struct:SM::Flow::P 
  body: Please see the FlashHelper for details on the usage as you won't need to touch this class at all.
constants: []

full_name: Ramaze::Session::Flash
includes: 
- !ruby/object:RI::IncludedModule 
  name: Enumerable
- !ruby/object:RI::IncludedModule 
  name: Enumerable
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: "[]"
- !ruby/object:RI::MethodSummary 
  name: "[]"
- !ruby/object:RI::MethodSummary 
  name: "[]="
- !ruby/object:RI::MethodSummary 
  name: "[]="
- !ruby/object:RI::MethodSummary 
  name: combined
- !ruby/object:RI::MethodSummary 
  name: combined
- !ruby/object:RI::MethodSummary 
  name: current
- !ruby/object:RI::MethodSummary 
  name: current
- !ruby/object:RI::MethodSummary 
  name: delete
- !ruby/object:RI::MethodSummary 
  name: delete
- !ruby/object:RI::MethodSummary 
  name: each
- !ruby/object:RI::MethodSummary 
  name: each
- !ruby/object:RI::MethodSummary 
  name: inspect
- !ruby/object:RI::MethodSummary 
  name: inspect
- !ruby/object:RI::MethodSummary 
  name: previous
- !ruby/object:RI::MethodSummary 
  name: previous
- !ruby/object:RI::MethodSummary 
  name: session
- !ruby/object:RI::MethodSummary 
  name: session
name: Flash
superclass: Object
