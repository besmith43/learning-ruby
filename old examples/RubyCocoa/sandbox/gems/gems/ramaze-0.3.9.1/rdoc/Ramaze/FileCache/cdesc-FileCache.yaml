--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: "[]"
- !ruby/object:RI::MethodSummary 
  name: "[]"
- !ruby/object:RI::MethodSummary 
  name: "[]="
- !ruby/object:RI::MethodSummary 
  name: "[]="
- !ruby/object:RI::MethodSummary 
  name: clear
- !ruby/object:RI::MethodSummary 
  name: clear
- !ruby/object:RI::MethodSummary 
  name: delete
- !ruby/object:RI::MethodSummary 
  name: delete
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: to_sym
- !ruby/object:RI::MethodSummary 
  name: to_sym
- !ruby/object:RI::MethodSummary 
  name: values_at
- !ruby/object:RI::MethodSummary 
  name: values_at
comment: 
- !ruby/struct:SM::Flow::P 
  body: "drop-in replacement for Ramaze's built-in MemoryCache built on the filesystem. # to use with sessions do"
- !ruby/struct:SM::Flow::VERB 
  body: "  Ramaze::Global::cache_alternative[:sessions] = Ramaze::FileCache\n"
- !ruby/struct:SM::Flow::P 
  body: to use with everything do
- !ruby/struct:SM::Flow::VERB 
  body: "  Ramaze::Global::cache = Ramaze::FileCache\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: Host
  value: Socket.gethostname
- !ruby/object:RI::Constant 
  comment: 
  name: Pid
  value: Process.pid
- !ruby/object:RI::Constant 
  comment: 
  name: Fu
  value: FileUtils
- !ruby/object:RI::Constant 
  comment: 
  name: Root
  value: File.join Ramaze::APPDIR, "cache"
- !ruby/object:RI::Constant 
  comment: 
  name: Host
  value: Socket.gethostname
- !ruby/object:RI::Constant 
  comment: 
  name: Pid
  value: Process.pid
- !ruby/object:RI::Constant 
  comment: 
  name: Fu
  value: FileUtils
- !ruby/object:RI::Constant 
  comment: 
  name: Root
  value: File.join Ramaze::APPDIR, "cache"
full_name: Ramaze::FileCache
includes: []

instance_methods: []

name: FileCache
superclass: 
